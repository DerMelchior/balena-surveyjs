# FROM ubuntu:jammy-20220531 as kernel-build
# FROM balenalib/%%BALENA_MACHINE_NAME%%-ubuntu:build as BUILD
# FROM balenalib/%%BALENA_MACHINE_NAME%%-ubuntu
FROM balenalib/%%BALENA_MACHINE_NAME%%-alpine

#ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Etc/UTC
RUN apk update
#RUN install_packages awscli bc bison build-essential curl flex git libelf-dev libssl-dev wireguard kmod iptables wget python-is-python3 pkg-config;
RUN install_packages python3 openssl elfutils-dev curl wget wireguard-tools-wg openrc iptables tailscale;
RUN apk upgrade

#RUN apt-get update && \
#    apt-get install -y \
#    awscli \
#    bc \
#    bison \
#    build-essential \
#    curl \
#    flex \
#    git \
#    libelf-dev \
#    libssl-dev \
#    wireguard \
#    kmod \
#    tailscale \
#    wget
#WORKDIR /build/tailscaled


#WORKDIR /usr/src/app
# Copy the startup script for loading the modules
COPY init.sh /usr/src/app/init.sh
COPY run_modules-load.sh /usr/src/app/run_modules-load.sh
COPY build.sh /usr/src/app/build.sh
COPY workaround.sh /usr/src/app/workaround.sh
COPY run.sh /usr/src/app/run.sh

RUN cd /usr/src/app/
#RUN wget https://tailscale.com/install.sh
RUN curl -fsSL https://tailscale.com/install.sh
#COPY install.sh /usr/src/app/install.sh
RUN chmod u+x /usr/src/app/*.sh


ENTRYPOINT ["sh", "tailscale up"]
# Run your usual service with CMD
CMD exec /bin/sh -c "trap : TERM INT; sleep 9999999999d & wait"

# ENTRYPOINT ["sh", "tailscale up"]
# Run your usual service with CMD
# CMD exec /bin/sh -c "trap : TERM INT; sleep 9999999999d & wait"
